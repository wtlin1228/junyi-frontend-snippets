{
  "junyiReactComponent": {
    "prefix": "jc",
    "body": [
      "/** @format */",
      "",
      "import React from 'react';",
      "import PropTypes from 'prop-types';",
      "import { makeStyles } from '@material-ui/core/styles';",
      "",
      "// utils",
      "",
      "// assets",
      "",
      "// actions",
      "",
      "// components",
      "",
      "// self-defined-components",
      "const useStyles = makeStyles(",
      "  (theme) => ({",
      "    root: {",
      "      ",
      "    },",
      "  }),",
      "  { name: '${1:${TM_FILENAME_BASE}}' }",
      ");",
      "",
      "const ${1:${TM_FILENAME_BASE}} = ({}) => {",
      "  const classes = useStyles();",
      "",
      "  return <div className={classes.root} />;",
      "};",
      "",
      "${1:${TM_FILENAME_BASE}}.propTypes = {",
      "  ",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}",
      ""
    ],
    "description": "Basic React Component"
  },
  "junyiReactComponentWithRedux": {
    "prefix": "jrc",
    "body": [
      "/** @format */",
      "",
      "import React from 'react';",
      "import PropTypes from 'prop-types';",
      "import { connect } from 'react-redux';",
      "import { bindActionCreators } from 'redux';",
      "",
      "// utils",
      "",
      "// assets",
      "",
      "// actions",
      "",
      "// components",
      "import ${1:${TM_FILENAME_BASE}}Component from '../components/${1:${TM_FILENAME_BASE}}';",
      "",
      "// self-defined-components",
      "",
      "const ${1:${TM_FILENAME_BASE}} = ({}) => {",
      "  return <${1:${TM_FILENAME_BASE}}Component />;",
      "};",
      "",
      "${1:${TM_FILENAME_BASE}}.propTypes = {",
      "  ",
      "};",
      "",
      "const mapStateToProps = (state) => ({",
      "",
      "});",
      "",
      "const mapDispatchToProps = (dispatch) => bindActionCreators({",
      "",
      "}, dispatch);",
      "",
      "export default connect(",
      "  mapStateToProps,",
      "  mapDispatchToProps",
      ")(${1:${TM_FILENAME_BASE}});",
      ""
    ],
    "description": "Basic React Component with redux"
  },
  "junyiReactComponentUnitTest": {
    "prefix": "jcut",
    "body": [
      "/** @format */",
      "",
      "import React from 'react';",
      "import { rest } from 'msw';",
      "import { setupServer } from 'msw/node';",
      "import { render, waitFor, screen } from '@testing-library/react';",
      "import userEvent from '@testing-library/user-event';",
      "import '@testing-library/jest-dom/extend-expect';",
      "",
      "import ${1:${TM_FILENAME/(.*).test\\..+$/$1/}} from '../${1:${TM_FILENAME/(.*).test\\..+$/$1/}}';",
      "",
      "const server = setupServer(",
      "  rest.get('/greeting', (req, res, ctx) => {",
      "    return res(ctx.json({ greeting: 'hello there' }));",
      "  })",
      ");",
      "",
      "beforeAll(() => server.listen());",
      "afterEach(() => server.resetHandlers());",
      "afterAll(() => server.close());",
      "",
      "test('render ${1:${TM_FILENAME/(.*).test\\..+$/$1/}}', () => {",
      "  // Arrange",
      "  render(<${1:${TM_FILENAME/(.*).test\\..+$/$1/}} />);",
      "",
      "  // Assert",
      "  // Alert",
      "});",
      "",
      "test('handlers server error', async () => {",
      "  server.use(",
      "    // override the initial 'GET /greeting' request handler",
      "    // to return a 500 Server Error",
      "    rest.get('/greeting', (req, res, ctx) => {",
      "      return res(ctx.status(500));",
      "    })",
      "  );",
      "",
      "  // Arrange",
      "  render(<${1:${TM_FILENAME/(.*).test\\..+$/$1/}} />);",
      "",
      "  // Assert",
      "  // Alert",
      "});",
      ""
    ],
    "description": "Unit Test for React Component"
  },
  "junyiReduxSlice": {
    "prefix": "jrs",
    "body": [
      "/** @format */",
      "",
      "import { createSlice, createAction } from '@reduxjs/toolkit';",
      "",
      "const namespace = '${1:${TM_DIRECTORY/^.+\\/(.*)$/$1/}}';",
      "const initialState = {};",
      "",
      "const ${1:${TM_DIRECTORY/^.+\\/(.*)$/$1/}}Slice = createSlice({",
      "  name: namespace,",
      "  initialState,",
      "  reducers: {",
      "    doSomeThing: (state, action) => {",
      "      const { foo } = action.payload;",
      "      state.foo = foo;",
      "    },",
      "  },",
      "});",
      "",
      "${1:${TM_DIRECTORY/^.+\\/(.*)$/$1/}}Slice.asyncActions = {",
      "  doOtherThingAsync: createAction(`\\${namespace}/doOtherThingAsync`),",
      "};",
      "",
      "export default ${1:${TM_DIRECTORY/^.+\\/(.*)$/$1/}}Slice;",
      ""
    ],
    "description": "Redux Slice"
  },
  "junyiStyledComponent": {
    "prefix": "jsc",
    "body": [
      "const ${1:StyledDiv} = styled(({ ${3:foo}, ...other }) => <${2:div} {...other} />)(",
      "  ({ ${3:foo} }) => ({",
      "",
      "  }),",
      "  { name: ${1:StyledDiv} }",
      ");"
    ],
    "description": "Material styled Component with consuming props pattern"
  }
}
